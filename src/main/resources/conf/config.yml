# Use this only if SIM is enabled
#metricPrefix: "Custom Metrics|Amazon Redshift|"

# If SIM is not enabled, then use this
metricPrefix: "Server|Component:<COMPONENT_ID>|Custom Metrics|Amazon Redshift|"
#To find the <COMPONENT_ID> in your environment,
#please follow the screenshot https://docs.appdynamics.com/display/PRO42/Build+a+Monitoring+Extension+Using+Java

# awsAccessKey, awsSecretKey, displayAccountName are mandatory fields.
accounts:
  - awsAccessKey: ""
    awsSecretKey: ""
    displayAccountName: "AppD"

    # Regions where Redshift instances are created
    # Allowed values: Please refer to regionEndPoints configuration in this file.
    regions: ["us-west-1", "us-west-2"]

credentialsDecryptionConfig:
    enableDecryption: "false"
    encryptionKey:

proxyConfig:
    host:
    port:
    username:
    password:

# Filters metrics based on provided Dimension values.
# Accepts comma separated values and regex patterns.
# If `values:[".*"]` is used, all are monitored,
# If `values:[]` is used, none are monitored

dimensions:
   - name: "latency"
     displayName: "Latency"
     values: [""]
   - name: "NodeID"
     displayName: "Node ID"
     values: [""]
   - name: "ClusterIdentifier"
     displayName: "Cluster ID"
     values: [""]
   - name: "service class"
     displayName: "Service Class"
     values: [""]
   - name: "stage"
     displayName: "Query Execution Stage"
     values: [""]
   - name: "wmlid"
     displayName: "Workload Mgmt Queue"
     values: [""]




# Detailed will fire CloudWatch API calls every 1 minute
# Basic will poll CloudWatch API every 5 min
# Since AWS Redshift sends metrics to CloudWatch every minute, detailed  monitoring is enabled by default

cloudWatchMonitoring: "Basic"

#If you want any other interval ( other than the mentioned "Basic" or "Detailed" in the above configuration )
#configure it here, if not leave it empty. This value is in minutes
#cloudWatchMonitoringInterval: 0

concurrencyConfig:
  noOfAccountThreads: 3
  noOfRegionThreadsPerAccount: 3
  noOfMetricThreadsPerRegion: 3
  #Thread timeout in seconds
  threadTimeOut: 30

# Global metrics config for all accounts
metricsConfig:

    # By default, all metrics retrieved from CloudWatch are 'Average' values.
    # This option allows you to override the metric type.
    #
    # name supports regex
    # Allowed statTypes are: ave, max, min, sum, samplecount
    #
    # Note: Irrespective of the metric type, value will still be reported as
    # Observed value to the Controller

    includeMetrics:
       - name: "CPUUtilization"
         alias: "CPU Utilization (Unit - %; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "DatabaseConnections"
         alias: "DB Connections (Unit - Count; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "MaintenanceMode"
         alias: "Maintenance Mode (Values - 1/0; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "OBSERVATION"
         timeRollUpType: "CURRENT"
         clusterRollUpType: "INDIVIDUAL"

       - name: "HealthStatus"
         alias: "Health Status (Values - 1/0; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "OBSERVATION"
         timeRollUpType: "CURRENT"
         clusterRollUpType: "INDIVIDUAL"

       - name: "NetworkReceiveThroughput"
         alias: "Network Receive Throughput (Unit - Bytes/sec; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "NetworkTransmitThroughput"
         alias: "Network Transmit Throughput (Unit - Bytes/sec; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"


       - name: "PercentageDiskSpaceUsed"
         alias: "Disk Space Used (Unit - %; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "QueriesCompletedPerSecond"
         alias: "Queries Completed Per Sec(Unit - Count; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         metricsTimeRange:
          startTimeInMinsBeforeNow: 7 #plus Cloudwatch latency
          endTimeInMinsBeforeNow: 0

       - name: "QueryDuration"
         alias: "Query Duration (Unit - Microseconds; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         metricsTimeRange:
          startTimeInMinsBeforeNow: 7 #plus Cloudwatch latency
          endTimeInMinsBeforeNow: 0

       - name: "QueryRuntimeBreakdown"
         alias: "QueryRuntimeBreakdown (Unit - Milliseconds; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         metricsTimeRange:
          startTimeInMinsBeforeNow: 7 #plus Cloudwatch latency
          endTimeInMinsBeforeNow: 0

       - name: "ReadIOPS"
         alias: "Disk Reads (Unit - Count/sec; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "ReadLatency"
         alias: "Read Latency (Unit - Seconds; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "ReadThroughput"
         alias: "Read Throughput (Unit - Bytes; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "TotalTableCount"
         alias: "Total Table Count (Unit - Count; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "WLMQueriesCompletedPerSecond"
         alias: "WLM Queries Completed(Unit - Count/sec; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         metricsTimeRange:
           startTimeInMinsBeforeNow:  7
           endTimeInMinsBeforeNow: 0

       - name: "WLMQueryDuration"
         alias: "WLM Query Duration (Unit - Microseconds; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         metricsTimeRange:
           startTimeInMinsBeforeNow: 7
           endTimeInMinsBeforeNow: 0

       - name: "WLMQueueLength"
         alias: "WLM Queue Length (Unit - Count; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "WriteIOPS"
         alias: "Disk Writes (Unit - Count/seconds; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "WriteLatency"
         alias: "Write Latency (Unit - Seconds; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

       - name: "WriteThroughput"
         alias: "Write Throughput (Unit - Bytes; StatType - ave)"
         statType: "ave"
         delta: false
         multiplier: 1
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"

    metricsTimeRange:
      startTimeInMinsBeforeNow: 9
      endTimeInMinsBeforeNow: 4

    # Rate limit ( per second ) for GetMetricStatistics, default value is 400.
    # https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_limits.html
    getMetricStatisticsRateLimit: 400


    # The max number of retry attempts for failed retryable requests
    # (ex: 5xx error responses from a service) or throttling errors

    maxErrorRetrySize: 3





regionEndPoints:
  us-east-1 : monitoring.us-east-1.amazonaws.com
  us-east-2 : monitoring.us-east-2.amazonaws.com
  us-west-1 : monitoring.us-west-1.amazonaws.com
  us-west-2 : monitoring.us-west-2.amazonaws.com
  ap-northeast-1 : monitoring.ap-northeast-1.amazonaws.com
  ap-northeast-2: monitoring.ap-northeast-2.amazonaws.com
  ap-northeast-3 : monitoring.ap-northeast-3.amazonaws.com
  ap-south-1 : monitoring.ap-south-1.amazonaws.com
  ap-southeast-1 : monitoring.ap-southeast-1.amazonaws.com
  ap-southeast-2 : monitoring.ap-southeast-2.amazonaws.com
  ca-central-1 : monitoring.ca-central-1.amazonaws.com
  cn-north-1 : monitoring.cn-north-1.amazonaws.com.cn
  cn-northwest-1 : monitoring.cn-northwest-1.amazonaws.com.cn
  eu-central-1 : monitoring.eu-central-1.amazonaws.com
  eu-west-1 : monitoring.eu-west-1.amazonaws.com
  eu-west-2 : monitoring.eu-west-2.amazonaws.com
  eu-west-3 : monitoring.eu-west-3.amazonaws.com
  sa-east-1 : monitoring.sa-east-1.amazonaws.com
  us-gov-west-1 : monitoring.us-gov-west-1.amazonaws.com

#Encryption key for your controllerInfo password
encryptionKey: ""

# If any of the following fields are not set, the values of the specific fields are set from the system properties of the corresponding fields as specified in the comments.
# If the system properties are not set for the field, then the data is retrieved from machine agent configFile.
controllerInfo:
  controllerHost: "" # -Dappdynamics.controller.hostName
  controllerPort: 8090 # -Dappdynamics.controller.port
  controllerSslEnabled: false # -Dappdynamics.controller.ssl.enabled
  enableOrchestration: false # N/A
  uniqueHostId: "" # -Dappdynamics.agent.uniqueHostId
  username: "" # -Dappdynamics.agent.monitors.controller.username
  password: "" # -Dappdynamics.agent.monitors.controller.password
  encryptedPassword: "" # -Dappdynamics.agent.monitors.controller.encryptedPassword
  accountAccessKey: "" # -Dappdynamics.agent.accountAccessKey
  account: "" # -Dappdynamics.agent.accountName
  machinePath: "" # -Dappdynamics.machine.agent.hierarchyPath
  simEnabled: false # -Dappdynamics.sim.enabled
  applicationName: "" # -Dappdynamics.agent.applicationName
  tierName: "" # -Dappdynamics.agent.tierName
  nodeName: "" # -Dappdynamics.agent.nodeName